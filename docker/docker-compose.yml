services:
  postgres:
    image: postgres:latest
    container_name: ft_transcendence_postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - ../.env
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ft_transcendence_network

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ft_transcendence_django
    restart: always
    volumes:
      - ../:/app
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - postgres
    networks:
      - ft_transcendence_network
    command: gunicorn api.wsgi:application --bind 0.0.0.0:8000

  nginx:
    image: nginx:latest
    container_name: ft_transcendence_nginx
    restart: always
    ports:
      - '${NGINX_PORT}:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/usr/share/nginx/static
      - media_volume:/usr/share/nginx/media
    depends_on:
      - web
    networks:
      - ft_transcendence_network

networks:
  ft_transcendence_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
