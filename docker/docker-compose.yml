services:
  postgres:
    image: postgres:latest
    container_name: ft_transcendence_postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '127.0.0.1:${DB_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ft_transcendence_network
    profiles:
      - dev
      - prod

  redis:
    image: redis:latest
    container_name: ft_transcendence_redis
    restart: always
    ports:
      - '127.0.0.1:${CACHE_REDIS_PORT}:6379'
    command: redis-server
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ft_transcendence_network
    profiles:
      - dev
      - prod

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ft_transcendence_django
    restart: always
    ports:
      - '127.0.0.1:8000:8000'
    environment:
      - DJANGO_SETTINGS_MODULE=transcendence.settings.production
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - CACHE_REDIS_HOST=redis
      - CACHE_REDIS_PORT=6379
      - AUTH_JWT_SECRET_KEY=${AUTH_JWT_SECRET_KEY}
      - OAUTH_42_AUTH_URI=${OAUTH_42_AUTH_URI}
      - OAUTH_42_UID=${OAUTH_42_UID}
      - OAUTH_42_SECRET=${OAUTH_42_SECRET}
      - OAUTH_42_REDIRECT_URI=${OAUTH_42_REDIRECT_URI}
      - OAUTH_42_TOKEN_URI=${OAUTH_42_TOKEN_URI}
      - OAUTH_42_USER_URI=${OAUTH_42_USER_URI}
    volumes:
      - ../:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ft_transcendence_network
    profiles:
      - prod

  nginx:
    image: nginx:latest
    container_name: ft_transcendence_nginx
    restart: always
    ports:
      - '0.0.0.0:${NGINX_PORT}:80'
      - '0.0.0.0:${NGINX_SSL_PORT}:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - static_volume:/usr/share/nginx/static
      - media_volume:/usr/share/nginx/media
    depends_on:
      - web
    networks:
      - ft_transcendence_network
    profiles:
      - prod

networks:
  ft_transcendence_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
